import com.google.gson.Gson
import com.google.gson.Gson
import com.google.gson.GsonBuilder
import okhttp3.MediaType.Companion.toMediaTypeOrNull
import okhttp3.MultipartBody
import okhttp3.RequestBody.Companion.asRequestBody
import okhttp3.RequestBody.Companion.toRequestBody

@Multipart
@POST("report/image_upload/{id}")
suspend fun reportImageUpload(
  @Path("id") reportId: Int, 
  @Part("Data") RequestBody UploadReqBody,
  @Part file1: MultipartBody.Part,
  @Part file2: MultipartBody.Part): NetworkResponse<ImageUploadResponse, ErrorResponse>
  
  
######### Class ###########

class imageUpload {

  gson = GsonBuilder().create()

  val mediaTypeMultipart = "multipart/form-data".toMediaTypeOrNull()
  val mediaTypeText = "text/plain".toMediaTypeOrNull()

  val services = gson.toJson(UploadReqBody)
  //val deal_data = RequestBody.create(MediaType.parse("text/plain"), services)
  val deal_data = services.toRequestBody(mediaTypeText)

  val file = File(decodeFile(imagePath, 800, 800, i.toString()))
  //val requestFile = RequestBody.create(MediaType.parse("multipart/form-data"), file)
  val requestFile = file.asRequestBody(mediaTypeMultipart)
  val body = MultipartBody.Part.createFormData(file.getName(), file.getName(), requestFile)

}
  
